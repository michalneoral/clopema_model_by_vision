function [ chainP ] = chainOfPoints( startPoints, optFlow )
    for i = 1:size(startPoints,1)
         chainP(i,:)= getChain(startPoints{i,1}, optFlow);
    end    
end

function [ chain ] = getChain( startPoint, optFlow )
    chain(1,1) = startPoint(1,1);
    for i=2:size(optFlow,2)
        chain(1,i) = getNextPoint(chain(1,i-1), optFlow, i);
    end
end

function [ nextPoint ] = getNextPoint(lastPoint, flow, number)
    nextPoint = [flow{1,number}(lastPoint(1),lastPoint(2),1) + lastPoint(1),flow{1,number}(lastPoint(1),lastPoint(2),2) + lastPoint(2)];
end

% function [ chainOfPoints ] = chainOfPoints( startPoints, optFlow )
% 
%     %chainOfPoints = zeros(size(startPoints,1),size(optFlow,2));
%     chainOfPoints(:,1) = startPoints{:,1};
%     
%     for i = 1:size(startPoints,1)
%         chainOfPoints(i,:)= {getChain(startPoints{i,1}, optFlow)};
%     end
% 
% end
% 
% function [ chain ] = getChain( startPoint, optFlow )
% 
%     %chain = zeros(size(optFlow,2),2);
%     chain(1,1) = {startPoint};
%     
%     for i = 2:size(optFlow,2)
%         chain(1,i)= getNextPoint(chain(1,i-1), optFlow, i);
%     end
% 
% end
% 
% function [ nextPoint ] = getNextPoint(lastPoint, flow, number)
%     nextPoint = [flow{1,number}(lastPoint(1),lastPoint(2),1) + lastPoint(1),flow{1,number}(lastPoint(1),lastPoint(2),2) + lastPoint(2)];
% end